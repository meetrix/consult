{"version":3,"sources":["../../../../../../frontend-dashboard/src/views/Pages/Login/Login.js"],"names":["config","require","Login","props","state","auth","signup","initializeApp","firebase_config","google_siginin","bind","setUsername","setPassword","username","setState","password","actions","login","console","log","provider","GoogleAuthProvider","signInWithPopup","then","result","token","credential","accessToken","user","history","push","catch","error","errorCode","code","errorMessage","message","email","authHeader","undefined","e","target","value","width"],"mappings":"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","file":"Login.js","sourcesContent":["import React, {Component} from 'react';\nimport {Container, Row, Col, CardGroup, Card, CardBody,CardFooter,  Button, Input, InputGroup, InputGroupAddon} from 'reactstrap';\nimport firebase from 'firebase';\nimport {HashRouter, Route, Switch,Redirect} from 'react-router-dom';\nimport GoogleButton from 'react-google-button';\n\nconst config = require('../../../../config.json');\n\nclass Login extends Component {\n\n    constructor(props){\n        super(props);\n        this.state={\n            auth:this.props.auth,\n            signup:false\n        }\n        firebase.initializeApp(config.firebase_config);\n\n        this.google_siginin = this.google_siginin.bind(this);\n        this.setUsername = this.setUsername.bind(this);\n        this.setPassword = this.setPassword.bind(this);\n        this.signup = this.signup.bind(this);\n\n    }\n    setUsername(username){\n\n        this.setState({\n            username: username\n        });\n\n    }\n    setPassword(password){\n        this.setState({\n            password: password\n        });\n    }\n    login() {\n        this.props.actions.login({username:this.state.username,password:this.state.password});\n    }\n    componentWillMount(){\n    }\n    google_siginin(props){\n\n        console.log(\"google siginin\");\n        var provider = new firebase.auth.GoogleAuthProvider();\n        firebase.auth().signInWithPopup(provider).then(function(result) {\n            // This gives you a Google Access Token. You can use it to access the Google API.\n            var token = result.credential.accessToken;\n            // The signed-in user info.\n            var user = result.user;\n            console.log(token);\n            //TODO add user to store\n            console.log(user);\n\n            props.history.push('/')\n\n          // ...\n        }).catch(function(error) {\n          // Handle Errors here.\n              var errorCode = error.code;\n              var errorMessage = error.message;\n              // The email of the user's account used.\n              var email = error.email;\n              // The firebase.auth.AuthCredential type that was used.\n              var credential = error.credential;\n              console.log(errorMessage)\n          // ...\n        });\n\n\n    }\n    signup(){\n        this.setState({\n            signup: true\n        });\n\n    }\n  render() {\n    if(this.props.auth.authHeader!=undefined){\n        return(\n\n        <Redirect to=\"/consultants\"/>\n        )\n    }\n    else if(this.state.signup){\n        return(\n        <Redirect to=\"/signup\"/>\n        )\n    }\n    else {\n        return (\n            <div className=\"app flex-row align-items-center\">\n                <Container>\n                    <Row className=\"justify-content-center\">\n                        <Col md=\"8\">\n                            <CardGroup>\n                                <Card className=\"p-4\">\n                                    <CardBody>\n                                        <h1>Login</h1>\n                                        <p className=\"text-muted\">Sign In to your account</p>\n                                        <InputGroup className=\"mb-3\">\n                                            <InputGroupAddon addonType=\"prepend\"><i className=\"icon-user\"></i></InputGroupAddon>\n                                            <Input onChange={e => this.setUsername(e.target.value)} type=\"text\"\n                                                   placeholder=\"Username\"/>\n                                        </InputGroup>\n                                        <InputGroup className=\"mb-4\">\n                                            <InputGroupAddon addonType=\"prepend\"><i className=\"icon-lock\"></i></InputGroupAddon>\n                                            <Input onChange={e => this.setPassword(e.target.value)} type=\"password\"\n                                                   placeholder=\"Password\"/>\n                                        </InputGroup>\n                                        <Row>\n                                            <Col xs=\"6\">\n                                                <Button color=\"primary\" className=\"px-4\" onClick={ () => this.login()}>Login</Button>\n                                            </Col>\n                                            <Col xs=\"6\" className=\"text-right\">\n                                                <Button color=\"link\" className=\"px-0\">Forgot password?</Button>\n                                            </Col>\n                                        </Row>\n                                        <br/>\n                                        <Row>\n                                            <Col xs=\"12\" sm=\"6\">\n                                                <Button className=\"btn-facebook\" block><span>facebook</span></Button>\n                                            </Col>\n                                            <Col xs=\"12\" sm=\"6\">\n                                                <Button className=\"btn-twitter\" block><span>twitter</span></Button>\n                                            </Col>\n                                            <Col xs=\"12\" sm=\"6\">\n\n                                                <Button className=\"btn-google-plus\" block\n                                                        onClick={ () => this.google_siginin(this.props)}><span>google</span></Button>\n                                            </Col>\n                                        </Row>\n                                    </CardBody>\n                                </Card>\n                                <Card className=\"text-white bg-primary py-5 d-md-down-none\" style={{width: 44 + '%'}}>\n                                    <CardBody className=\"text-center\">\n                                        <div>\n                                            <h2>Sign up</h2>\n                                            <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod\n                                                tempor incididunt ut\n                                                labore et dolore magna aliqua.</p>\n                                            <Button color=\"primary\" className=\"mt-3\" active onClick={ () => this.signup()}>Register Now!</Button>\n                                        </div>\n                                    </CardBody>\n                                </Card>\n                            </CardGroup>\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        );\n    }\n  }\n}\n\nexport default Login;\n"]}